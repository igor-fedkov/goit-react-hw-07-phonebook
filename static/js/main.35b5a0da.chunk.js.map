{"version":3,"sources":["redux/phoneBook/phonebook-selectors.js","redux/phoneBook/phoneBook-actions.js","redux/phoneBook/phoneBook-operations.js","components/GlobalStyles/properties.css.js","components/GlobalStyles/stylizedComponent.css.js","components/ContactForm/ContactForm.css.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.css.jsx","components/ContactItem/ContactItem.jsx","components/ContactItem/ContactItem.container.js","components/ContactsList/ContactsList.css.jsx","components/ContactsList/ContactsList.jsx","components/ContactsList/ContactsList.container.js","components/Filter/Filter.css.jsx","components/Filter/Filter.jsx","components/Filter/Filter.container.js","components/Notification/Notification.css.jsx","components/Notification/Notification.jsx","components/LoaderSpinner/LoaderSpinner.css.jsx","components/LoaderSpinner/LoaderSpinner.jsx","components/Modal/Modal.css.jsx","components/Modal/Modal.jsx","components/PhoneBook/PhoneBook.css.jsx","components/PhoneBook/PhoneBook.jsx","components/PhoneBook/PhoneBook.container.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/store.js","reportWebVitals.js","index.js"],"names":["getContacts","state","contacts","items","getLoading","loading","getFilter","filter","getEditContactId","idForEdit","getFilteredContacts","createSelector","length","filteredContacts","name","toLowerCase","includes","getEditContact","id","find","contact","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","setEditContactId","axios","defaults","baseURL","properties","mainColor","hoverColor","boxShadow","stylizedComponent","input","container","Form","styled","form","Label","label","Input","Button","button","ContactForm","number","onInputChange","event","target","value","setState","onSubmit","preventDefault","onSubmitContact","props","this","startName","startNumber","btnCaption","type","onChange","Component","ButtonDelete","Li","li","styledComponent","Name","span","Number","NameAndBtnContainer","div","ContactItem","deleteContact","onDoubleClick","onClick","connect","dispatch","delete","then","catch","error","List","ul","ContactsList","listItems","map","CSSTransition","timeout","classNames","unmountOnExit","TransitionGroup","phonebookSelectors","stysizedComponent","Container","Filter","actions","NotificationEl","notificationRoot","document","querySelector","Notification","text","createPortal","LoaderContainer","LoaderSpinner","color","height","width","Overlay","ModalContainer","modalRoot","Modal","onKeyDown","onClose","code","onkBackdropClick","currentTarget","window","addEventListener","removeEventListener","children","PhoneBookEl","Title","h1","PhoneBook","showNotification","onSubmitAddContact","addContact","undefined","setTimeout","onSubmitEditContact","editName","editNumber","editContact","onCloseEditModal","in","appear","get","data","post","put","App","className","contactsListReducer","createReducer","_","payload","contactFilterReducer","editContactIdReducer","errorReducer","contactsReducer","combineReducers","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.35b5a0da.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items;\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getEditContactId = state => state.contacts.idForEdit;\r\n\r\nconst getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  if (contacts.length < 2) {\r\n    return {\r\n      filteredContacts: contacts\r\n    };\r\n  }\r\n\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n\t\tname.toLowerCase().includes(filter.toLowerCase()));\r\n\treturn {\r\n\t\tfilteredContacts\r\n\t};\r\n})\r\n\r\nconst getEditContact = createSelector([getContacts, getEditContactId], (contacts, id) => \r\n  contacts.find(contact => contact.id === id)\r\n)\r\n\r\nexport {\r\n  getContacts,\r\n  getLoading,\r\n  getEditContactId,\r\n  getFilter,\r\n  getFilteredContacts,\r\n  getEditContact\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contacts/getContactsSuccess');\r\nexport const getContactsError = createAction('contacts/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const editContactRequest = createAction('contacts/editContactRequest');\r\nexport const editContactSuccess = createAction('contacts/editContactSuccess');\r\nexport const editContactError = createAction('contacts/editContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('PHONEBOOK/CHANGE_FILTER');\r\n\r\nexport const setEditContactId = createAction('PHONEBOOK/SET_EDIT_CONTACT_ID');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  getContactsRequest, getContactsSuccess, getContactsError,\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  editContactRequest, editContactSuccess, editContactError\r\n} from './phoneBook-actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nexport const getContacts = () => dispatch => {\r\n\r\n  dispatch(getContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(error => {\r\n        dispatch(getContactsError(error))\r\n      })\r\n}\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number\r\n  }\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactSuccess(data))}\r\n    )\r\n    .catch(error => {\r\n      dispatch(addContactError(error))\r\n    })\r\n}\r\n\r\nexport const editContact = (id, name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number\r\n  }\r\n\r\n  dispatch(editContactRequest());\r\n\r\n  axios\r\n    .put(`/contacts/${id}`, contact)\r\n    .then(({ data }) => dispatch(editContactSuccess(data)))\r\n    .catch(error => dispatch(editContactError(error)))\r\n}\r\n\r\nexport const deleteContact = id => dispatch => {\r\n\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => {dispatch(deleteContactError(error))})\r\n}","const properties =  {\r\n  mainColor: '#1933c9',\r\n  hoverColor: '#0e2085',\r\n  boxShadow: '0px 2px 7px 0px rgba(34, 60, 80, 0.2)'\r\n}\r\n\r\nexport default properties;","import properties from './properties.css';\r\n\r\nconst stylizedComponent = {\r\n  input: `\r\n\t\tdisplay: block;\r\n\t\tpadding: 10px;\r\n\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\tborder-radius: 4px;\r\n\t\tborder: 1px solid black;\r\n\r\n\t\tfont-size: 14px;\r\n\r\n\t\t&&:focus {\r\n\t\t\tborder: 1px solid ${properties.mainColor};\r\n\t\t\toutline: none;\r\n\t}`,\r\n\tcontainer: `\r\n\t\tpadding: 10px;\r\n\t\twidth: 450px;\r\n\t\tbox-shadow: ${properties.boxShadow};\r\n\t`\r\n}\r\n\r\nexport default stylizedComponent;","import styled from 'styled-components';\r\n\r\nimport stylizedComponent from '../GlobalStyles/stylizedComponent.css'\r\nimport properties from '../GlobalStyles/properties.css';\r\n\r\nconst Form = styled.form`\r\n\tpadding: 10px;\r\n\twidth: 450px;\r\n\tbox-shadow: ${properties.boxShadow};\r\n`;\r\n\r\nconst Label = styled.label`\r\n\twidth: 100%;\r\n\tdisplay: block;\r\n\tmargin-bottom: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\t${stylizedComponent.input}\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tpadding: 8px;\r\n\r\n\twidth: 100%;\r\n\tborder-radius: 4px;\r\n\tbackground-color: ${properties.mainColor};\r\n\tcolor: white;\r\n\r\n\t&&:hover {\r\n\t\tbackground-color: ${properties.hoverColor};\r\n\t}\r\n`;\r\n\r\nexport { Form, Label, Input, Button };","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\n\r\nimport { Form, Label, Input, Button } from './ContactForm.css';\r\n\r\nclass ContactForm extends Component {\r\n\tstatic propTypes = {\r\n\t\tname: PropTypes.string,\r\n\t\tnumber: PropTypes.string,\r\n\t}\r\n\t\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tnumber: ''\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { startName, startNumber } = this.props;\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tname: startName,\r\n\t\t\t\tnumber: startNumber\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\tonInputChange = event => {\r\n    const { name, value } = event.target;\r\n\t\tthis.setState(\r\n      { [name]: value }\r\n    )\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst { name, number } = this.state;\r\n\t\tconst { onSubmitContact } = this.props;\r\n\t\t\r\n\t\tif (onSubmitContact(name, number)) {\r\n\t\t\tthis.setState({ name: '', number: '' });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { name, number } = this.state;\r\n\t\tconst { btnCaption } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<Form onSubmit={this.onSubmit}>\r\n\t\t\t\t<Label>\r\n\t\t\t\t\tName\r\n\t\t\t\t\t<Input type=\"text\" name=\"name\" value={name} onChange={this.onInputChange}/>\r\n\t\t\t\t</Label>\r\n\r\n\t\t\t\t<Label>\r\n\t\t\t\t\tNumber\r\n\t\t\t\t\t<Input type=\"tel\" name=\"number\" value={number} onChange={this.onInputChange}/>\r\n\t\t\t\t</Label>\r\n\r\n\t\t\t\t<Button type=\"submit\">{btnCaption}</Button>\r\n\t\t\t</Form>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nContactForm.propTypes = {\r\n\tname: PropTypes.string, \r\n\tnumber: PropTypes.string, \r\n\tonInputChange: PropTypes.func, \r\n\tonSubmit: PropTypes.func\r\n}\r\n\r\nexport default ContactForm;","import styled from 'styled-components';\r\n\r\nimport styledComponent from '../GlobalStyles/stylizedComponent.css';\r\n\r\nconst ButtonDelete = styled.button`\r\n\tpadding: 0;\r\n\twidth: 26px;\r\n\theight: 26px;\r\n\tfont-size: 14px;\r\n\tbackground-color: #fa5538;\r\n\tborder-color: transparent;\r\n\tborder-radius: 2px;\r\n\tcolor: white;\r\n`;\r\n\r\nconst Li = styled.li`\r\n\t${styledComponent.container}\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin: 2px 0;\r\n\r\n\ttransition: all 250ms;\r\n\r\n\t&.fade-enter {\r\n\t\ttransform: translateX(-100%);\r\n\t}\r\n\r\n\t&.fade-enter-active {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n\t&.fade-exit {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n\t&.fade-exit-active {\r\n\t\ttransform: translateX(-100%);\r\n\t}\r\n`;\r\n\r\nconst Name = styled.span`\r\n\r\n`;\r\n\r\nconst Number = styled.span`\r\n\r\n`;\r\n\r\nconst NameAndBtnContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\r\n\twidth: 50%;\r\n`;\r\n\r\n\r\nexport { ButtonDelete, Li, Name, Number, NameAndBtnContainer };","import PropTypes from 'prop-types';\r\n\r\nimport { ButtonDelete, Li, Name, Number, NameAndBtnContainer } from './ContactItem.css';\r\n\r\nconst ContactItem = ({ id, name, number, deleteContact, setEditContactId }) => {\r\n\r\n\treturn (\r\n\t\t<Li onDoubleClick={() => setEditContactId(id)}>\r\n\t\t\t<Name>{name}:</Name>\r\n\t\t\t<NameAndBtnContainer>\r\n\t\t\t\t<Number>{number}</Number> \r\n\t\t\t\t<ButtonDelete\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={() => deleteContact(id)}>\r\n\t\t\t\t\t&#x2716;\r\n\t\t\t\t</ButtonDelete>\r\n\t\t\t</NameAndBtnContainer>\r\n\t\t</Li>\t\t\r\n\t)\r\n}\r\n\r\nContactItem.propTypes = {\r\n\tid: PropTypes.number.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tnumber: PropTypes.string,\r\n\tdeleteContact: PropTypes.func\r\n}\r\n\r\nexport default ContactItem;","import { connect } from 'react-redux';\r\n\r\nimport { setEditContactId } from '../../redux/phoneBook/phoneBook-actions';\r\nimport { deleteContact } from '../../redux/phoneBook/phoneBook-operations';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tdeleteContact: id => dispatch(deleteContact(id)),\r\n\tsetEditContactId: id => dispatch(setEditContactId(id)),\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  list-style-type: none;\r\n`;\r\n\r\nexport { List };","import PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"; \r\n\r\nimport ContactItem from '../ContactItem';\r\n\r\nimport { List } from './ContactsList.css';\r\n\r\nconst ContactsList = ({ filteredContacts }) => {\r\n\r\n\tconst listItems = filteredContacts.map(({ name, number, id }) => {\r\n\t\treturn (\r\n\t\t\t<CSSTransition\r\n\t\t\t\tkey={id}\r\n\t\t\t\ttimeout={250}\r\n\t\t\t\tclassNames=\"fade\"\r\n\t\t\t\tunmountOnExit\r\n\t\t\t>\r\n\t\t\t\t<ContactItem\r\n\t\t\t\t\tid={id}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tnumber={number}\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t</CSSTransition>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<List>\r\n\t\t\t<TransitionGroup>\r\n\t\t\t\t{listItems}\r\n\t\t\t</TransitionGroup>\r\n\t\t</List>\r\n\t)\r\n}\r\n\r\nContactsList.propTypes = {\r\n\tfilteredContacts: PropTypes.arrayOf(PropTypes.shape({\r\n\t\tid: PropTypes.number.isRequired,\r\n\t\tname: PropTypes.string.isRequired,\r\n\t\tnumber: PropTypes.string.isRequired\r\n\t}))\r\n}\r\n\r\nexport default ContactsList;","import { connect } from 'react-redux';\r\n\r\nimport * as phonebookSelectors from '../../redux/phoneBook/phonebook-selectors';\r\n\r\nimport ContactsList from './ContactsList';\r\n\r\nconst mapStateToProps = state => phonebookSelectors.getFilteredContacts(state);\r\n\r\nexport default connect(mapStateToProps)(ContactsList);","import styled from 'styled-components';\r\n\r\nimport stysizedComponent from '../GlobalStyles/stylizedComponent.css'\r\n\r\nconst Label = styled.label`\r\n\tdisplay: block;\r\n\tmargin-bottom: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\t${stysizedComponent.input}\r\n`;\r\n\r\nconst Container = styled.div`\r\n\t${stysizedComponent.container}\r\n\t\r\n\tmargin-top: 20px;\r\n\r\n\ttransition: all 250ms;\r\n\r\n\t&.fade-enter {\r\n\t\ttransform: scale(0);\r\n\t}\r\n\r\n\t&.fade-enter-active {\r\n\t\ttransform: scale(1);\r\n\t}\r\n\r\n\t&.fade-exit {\r\n\t\ttransform: scale(1);\r\n\t}\r\n\r\n\t&.fade-exit-active {\r\n\t\ttransform: scale(0);\r\n\t}\r\n`;\r\n\r\nexport { Label, Input, Container };","import PropTypes from 'prop-types';\r\n\r\nimport { Label, Input, Container } from './Filter.css';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Label>\r\n\t\t\t\tFind contacts by name\r\n\t\t\t\t<Input type=\"text\" name=\"filter\" value={filter} onChange={changeFilter}/>\r\n\t\t\t</Label>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nFilter.propTypes = {\r\n\tfilter: PropTypes.string,\r\n\tchangeFilter: PropTypes.func\r\n}\r\n\r\nexport default Filter;","import { connect } from 'react-redux';\r\n\r\nimport * as phonebookSelectors from '../../redux/phoneBook/phonebook-selectors';\r\nimport * as actions from '../../redux/phoneBook/phoneBook-actions';\r\n\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: phonebookSelectors.getFilter(state)\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tchangeFilter: event => dispatch(actions.changeFilter(event.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from 'styled-components';\r\n\r\nconst NotificationEl = styled.div`\r\n  position: absolute;\r\n  right: 50px;\r\n  top: 10px;\r\n\r\n  padding: 10px;\r\n  width: 200px;\r\n\r\n  text-align: center;\r\n  color: white;\r\n  background-color: red;\r\n  border-radius: 5px;\r\n\r\n  transition: all 250ms;\r\n\r\n  &.fade-enter {\r\n\t\ttransform: translateX(100%);\r\n\t}\r\n\r\n\t&.fade-enter-active {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n  &.fade-exit {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n\r\n\t&.fade-exit-active {\r\n\t\ttransform: translateX(100%);\r\n\t}\r\n`;\r\n\r\nexport { NotificationEl };","import PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { NotificationEl } from './Notification.css';\r\n\r\nconst notificationRoot = document.querySelector('#notification-root');\r\n\r\nconst Notification = ({ text }) => {\r\n  return createPortal(\r\n    <NotificationEl>{text}</NotificationEl>,\r\n    notificationRoot\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import styled from \"styled-components\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 20px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`","import Loader from \"react-loader-spinner\";\r\n\r\nimport { LoaderContainer } from './LoaderSpinner.css';\r\n\r\nconst LoaderSpinner = () =>\r\n  <LoaderContainer>\r\n    <Loader\r\n      type=\"Circles\"\r\n      color=\"#00BFFF\"\r\n      height={70}\r\n      width={70}\r\n      timeout={3000} //3 secs\r\n    />\r\n  </LoaderContainer>\r\n\r\nexport default LoaderSpinner;","import styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n`\r\n\r\nconst ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n\r\n  background-color: white;\r\n`\r\n\r\nexport { Overlay, ModalContainer };","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Overlay, ModalContainer } from './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n\tcomponentDidMount() {\r\n\t\twindow.addEventListener('keydown', this.onKeyDown)\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('keydown', this.onKeyDown);\r\n\t}\r\n\r\n\tonKeyDown = event => {\r\n\t\tconst { onClose } = this.props;\r\n\r\n\t\tif (event.code === 'Escape') {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t}\r\n\r\n\tonkBackdropClick = ({ target, currentTarget }) => {\r\n\t\tconst { onClose } = this.props;\r\n\r\n\t\tif (target === currentTarget) {\r\n\t\t\tonClose();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { children } = this.props;\r\n\t\treturn createPortal (\r\n\t\t\t<Overlay onClick={this.onkBackdropClick}>\r\n\t\t\t\t<ModalContainer>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</ModalContainer>\r\n\t\t\t</Overlay>,\r\n\t\t\tmodalRoot\r\n\t\t);\r\n\t}\r\n};\r\n\r\nModal.propTypes = {\r\n\tonClose: PropTypes.func\r\n}\r\n\r\nexport default Modal;","import styled from 'styled-components';\r\n\r\nimport properties from '../GlobalStyles/properties.css';\r\n\r\nconst PhoneBookEl = styled.div`\r\n\tposition: relative;\r\n\tmargin: 20px auto;\r\n\tpadding: 10px;\r\n\r\n\twidth: 500px;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n\tcolor ${properties.mainColor};\r\n\ttransition: all 500ms;\r\n\r\n\t&.fade-appear {\r\n\t\ttransform: translateX(-100%);\r\n\t}\r\n\r\n\t&.fade-appear-active {\r\n\t\ttransform: translateX(0);\r\n\t}\r\n`;\r\n\r\nexport { PhoneBookEl, Title };\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport ContactForm from '../ContactForm';\r\nimport ContactsList from '../ContactsList';\r\nimport Filter from '../Filter';\r\nimport Notification from '../Notification';\r\nimport LoaderSpinner from '../LoaderSpinner';\r\nimport Modal from '../Modal';\r\n\r\nimport { PhoneBookEl, Title } from './PhoneBook.css';\r\n\r\nclass PhoneBook extends Component {\r\n\t\r\n\tstatic propTypes = {\r\n\t\tshowNotification: PropTypes.bool\r\n\t}\r\n\r\n\tstate = {\r\n\t\tshowNotification: false,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getContacts();\r\n\t}\r\n\r\n\tonSubmitAddContact = (name, number) => {\r\n\t\tconst { contacts, addContact } = this.props;\r\n\r\n\t\tconst isNameAlreadyExists = contacts.find(contact => contact.name === name);\r\n\t\tif (isNameAlreadyExists !== undefined) {\r\n\t\t\tthis.setState({ showNotification: true });\r\n      setTimeout(() => this.setState({ showNotification: false }), 3000);\r\n      return;\r\n\t\t}\r\n\t\taddContact(name, number);\t\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tonSubmitEditContact = (name, number) => {\r\n\t\tconst { contacts, idForEdit, editName, editNumber, editContact, setEditContactId } = this.props;\r\n\r\n\t\tif (name === editName && number === editNumber) {\r\n\t\t\tsetEditContactId(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst isNameAlreadyExists = contacts.find(contact =>\r\n\t\t\tcontact.name === name && contact.id !== idForEdit\r\n\t\t);\r\n\t\tif (isNameAlreadyExists !== undefined) {\r\n\t\t\tthis.setState({ showNotification: true });\r\n      setTimeout(() => this.setState({ showNotification: false }), 3000);\r\n      return;\r\n\t\t}\r\n\t\teditContact(idForEdit, name, number);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tonCloseEditModal = () => {\r\n\t\tconst { setEditContactId } = this.props;\r\n\r\n\t\tsetEditContactId(null);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { showNotification } = this.state;\r\n\t\tconst { contacts, loading, idForEdit } = this.props;\r\n\t\tconst timeout = 250;\r\n\r\n\t\treturn (\r\n\t\t\t<PhoneBookEl>\r\n\t\t\t\t\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={true}\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\tclassNames=\"fade\"\r\n\t\t\t\t\ttimeout={timeout}>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<Title>PhoneBook</Title>\r\n\t\t\t\t</CSSTransition>\r\n\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={showNotification}\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\tclassNames=\"fade\"\r\n\t\t\t\t\ttimeout={timeout}\r\n\t\t\t\t\tunmountOnExit\r\n\t\t\t\t>\t\t\t\t\t\r\n\t\t\t\t\t<Notification text=\"Contact already exists!\"/>\r\n\t\t\t\t</CSSTransition>\r\n\r\n\t\t\t\t<ContactForm\r\n\t\t\t\t\tbtnCaption='Add contact'\r\n\t\t\t\t\tstartName=''\r\n\t\t\t\t\tstartNumber=''\r\n\t\t\t\t\tonSubmitContact={this.onSubmitAddContact}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<CSSTransition\r\n\t\t\t\t\tin={contacts.length > 1}\r\n\t\t\t\t\tappear={true}\r\n\t\t\t\t\tclassNames=\"fade\"\r\n\t\t\t\t\ttimeout={timeout}\r\n\t\t\t\t\tunmountOnExit>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<Filter />\r\n\t\t\t\t</CSSTransition>\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tloading && <LoaderSpinner />\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ContactsList />\r\n\t\t\t\t\r\n\t\t\t\t{\r\n\t\t\t\t\tidForEdit &&\r\n\t\t\t\t\t<Modal onClose={this.onCloseEditModal}>\r\n\t\t\t\t\t\t<ContactForm\r\n\t\t\t\t\t\t\tbtnCaption='Edit contact'\r\n\t\t\t\t\t\t\tstartName={this.props.editName}\r\n\t\t\t\t\t\t\tstartNumber={this.props.editNumber}\r\n\t\t\t\t\t\t\tonSubmitContact={this.onSubmitEditContact}\r\n\t\t\t\t\t\t/>\t\t\t\t\t\t\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tloading && <LoaderSpinner />\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t}\r\n\t\t\t</PhoneBookEl>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PhoneBook;","import { connect } from 'react-redux';\r\n\r\nimport * as phonebookSelectors from '../../redux/phoneBook/phonebook-selectors';\r\nimport { setEditContactId } from '../../redux/phoneBook/phoneBook-actions';\r\nimport { getContacts, addContact, editContact } from '../../redux/phoneBook/phoneBook-operations';\r\n\r\nimport PhoneBook from './PhoneBook';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcontacts: phonebookSelectors.getContacts(state),\r\n\t\tloading: phonebookSelectors.getLoading(state),\r\n\t\tidForEdit: phonebookSelectors.getEditContactId(state),\r\n\t\teditName: phonebookSelectors.getEditContact(state)?.name,\r\n\t\teditNumber: phonebookSelectors.getEditContact(state)?.number,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetContacts: () => dispatch(getContacts()),\r\n\t\taddContact: (name, number) => dispatch(addContact(name, number)),\r\n\t\teditContact: (id, name, number) => dispatch(editContact(id, name, number)),\r\n\t\tsetEditContactId: id => dispatch(setEditContactId(id)),\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);","import './App.css';\r\n\r\nimport PhoneBook from './components/PhoneBook'\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <PhoneBook />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  getContactsRequest, getContactsSuccess, getContactsError,\r\n  addContactRequest, addContactSuccess, addContactError,\r\n  editContactRequest, editContactSuccess, editContactError,\r\n  deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n  changeFilter, setEditContactId\r\n} from './phoneBook-actions';\r\n\r\nconst contactsListReducer = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [editContactSuccess]: (state, { payload }) => [ ...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n})\r\n\r\nconst contactFilterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  \r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [editContactRequest]: () => true,\r\n  [editContactSuccess]: () => false,\r\n  [editContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n})\r\n\r\nconst editContactIdReducer = createReducer(null, {\r\n  [setEditContactId]: (_, { payload }) => payload,\r\n  [editContactSuccess]: () => null,\r\n})\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [getContactsError]: (error) => error,\r\n  [addContactError]: (error) => error,\r\n  [deleteContactError]: (error) => error,\r\n})\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: contactsListReducer,\r\n  filter: contactFilterReducer,\r\n  loading,\r\n\tidForEdit: editContactIdReducer,\r\n  error: errorReducer,\r\n})\r\n\r\nexport default contactsReducer;","// import { combineReducers } from 'redux';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import storage from 'redux-persist/lib/storage';\r\n// import {\r\n//   persistStore,\r\n//   persistReducer,\r\n//   FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER\r\n// } from \"redux-persist\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport contactsReducer from './phoneBook/phoneBook-reducer';\r\n\r\n// const store = configureStore(rootReducer, composeWithDevTools());\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter']\r\n// }\r\n\r\n// const myMiddleware = store => next => action => {\r\n\r\n\r\n//   next(action);\r\n// }\r\n\r\nconst store = configureStore({\r\n  reducer:\r\n  {\r\n    // contacts: persistReducer(contactsPersistConfig, contactsReducer)\r\n    contacts: contactsReducer\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  // middleware: getDefaultMiddleware({\r\n  //   serializableCheck: {\r\n  //     ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n  //   }\r\n  // })\r\n  middleware: [...getDefaultMiddleware(),]\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export  { store, persistor };\r\nexport  { store };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n// import { store, persistor } from './redux/store';\r\nimport { store } from './redux/store';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <PersistGate loading={null} persistor={persistor}>  */}\r\n      <App />,\r\n    {/* </PersistGate> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}